"""
Django settings for {{project_name}} project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/{{docs_version}}/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/{{docs_version}}/ref/settings/
"""

import os

from configurations import Configuration, values


class Base(Configuration):
    # Build paths inside the root project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    # Build paths inside the project like this: os.path.join(PROJECT_DIR, ...)
    PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/{{docs_version}}/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = values.SecretValue()

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = values.BooleanValue(False)

    ALLOWED_HOSTS = values.ListValue(['*'])

    # Application definition

    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',

        # Third apps
        'rest_framework',

        # Local apps
        '{{project_name}}.apps.accounts.apps.AccountsConfig'
    ]

    MIDDLEWARE = [
        'django.middleware.security.SecurityMiddleware',
        'whitenoise.middleware.WhiteNoiseMiddleware',
        'django.contrib.sessions.middleware.SessionMiddleware',
        'django.middleware.common.CommonMiddleware',
        'django.middleware.csrf.CsrfViewMiddleware',
        'django.contrib.auth.middleware.AuthenticationMiddleware',
        'django.contrib.messages.middleware.MessageMiddleware',
        'django.middleware.clickjacking.XFrameOptionsMiddleware',
    ]

    ROOT_URLCONF = '{{project_name}}.urls'

    TEMPLATES = [
        {
            'BACKEND': 'django.template.backends.django.DjangoTemplates',
            'DIRS': [os.path.join(PROJECT_DIR, 'templates')],
            'APP_DIRS': True,
            'OPTIONS': {
                'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                ],
            },
        },
    ]

    WSGI_APPLICATION = '{{project_name}}.wsgi.application'

    # Database
    # https://docs.djangoproject.com/en/{{docs_version}}/ref/settings/#databases

    DATABASES = values.DatabaseURLValue('sqlite:///' + os.path.join(BASE_DIR, 'db.sqlite3'))

    # Password validation
    # https://docs.djangoproject.com/en/{{docs_version}}/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
        },
        {
            'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/{{docs_version}}/topics/i18n/

    LANGUAGE_CODE = 'en-us'

    TIME_ZONE = 'UTC'

    USE_I18N = True

    USE_L10N = True

    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/{{docs_version}}/howto/static-files/

    STATIC_URL = '/static/'

    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

    # See https://docs.djangoproject.com/en/{{docs_version}}/topics/email/#console-backend
    EMAIL = values.EmailURLValue('console://')

    AUTH_USER_MODEL = 'accounts.User'


class Test(Base):
    SECRET_KEY = 'secret_test'
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(Base.BASE_DIR, 'db.sqlite3'),
        }
    }


class Development(Base):
    DOTENV = os.path.join(Base.BASE_DIR, '.development')

    CORS_ORIGIN_ALLOW_ALL = True

    # See https://docs.djangoproject.com/en/{{docs_version}}/topics/cache/#dummy-caching-for-development
    CACHES = values.CacheURLValue('dummy://')

    Base.INSTALLED_APPS.insert(0, 'whitenoise.runserver_nostatic')


class Production(Base):
    DOTENV = os.path.join(Base.BASE_DIR, '.production')
